{"version":3,"sources":["assets/marvel.svg","actions/CharacterActionTypes.enum.ts","reducers/CharacterReducer.ts","sources/Api.ts","actions/CharacterActionCreators.ts","sagas/Character.ts","store/Store.tsx","components/CharacterListItem/index.tsx","components/CharacterList/index.tsx","components/Loader/index.tsx","components/NavigationBar/index.tsx","components/Search/index.tsx","pages/CharactersSearch/index.tsx","components/PowerStatsItem/index.tsx","components/PowerStatsList/index.tsx","components/TitleAndSubtitle/index.tsx","components/InfoList/index.tsx","pages/CharacterDetails/index.tsx","app/App.tsx","pages/root/Root.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","CharacterActionTypes","initialCharacterState","character","undefined","characters","isFetching","CharacterReducer","state","arguments","length","action","type","SEARCH_CHARACTERS","Object","objectSpread2","GET_CHARACTERS_SUCCESS","GET_CHARACTER_DETAILS","GET_CHARACTERS_DETAILS_SUCCESS","GET_CHARACTERS_FAILURE","baseUrl","searchCharactersFromApi","term","axios","get","concat","getCharacterDetailsFromApi","id","getCharactersSuccessActionCreator","getCharactersFailureActionCreator","getCharacterDetailsSuccessActionCreator","searchCharactersSaga","getCharacterDetailSaga","charactersSaga","response","regenerator_default","a","wrap","_context","prev","next","call","sent","data","results","put","t0","stop","_marked","_context2","_marked2","_context3","all","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","characterState","CharacterListItem","_ref","history","useHistory","react_default","createElement","className","onClick","event","preventDefault","push","src","image","url","alt","name","CharacterList","map","components_CharacterListItem","key","Loader","icon","NavigationBar","Fragment","react_router_dom","to","Search","value","onChange","onSubmit","e","placeholder","connect","store","dispatch","searchCharacters","searchCharactersActionCreator","_useState","useState","_useState2","slicedToArray","search","setSearch","React","useEffect","components_NavigationBar","components_Search","target","components_Loader","components_CharacterList","PowerStatsItem","Icon","GiThink","intelligence","strength","GiBiceps","speed","GiHoodedFigure","durability","GiRevolt","combat","GiSwordman","power","GiPowerLightning","getIconByType","PowerStatsList","keys","powerstats","components_PowerStatsItem","TitleAndSubtitle","title","subtitle","isSubObject","join","InfoList","objProps","components_TitleAndSubtitle","getCharacterDetails","getCharacterDetailsActionCreator","charId","useParams","components_PowerStatsList","components_InfoList","biography","work","connections","appearance","App","react","react_router","exact","path","component","CharacterContainer","CharacterDetails","Root","es","app_App","createStore","composeWithDevTools","applyMiddleware","run","configureStore","ReactDOM","root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.60b2720c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marvel.f4e47a1c.svg\";","enum CharacterActionTypes {\n  SEARCH_CHARACTERS       = 'SEARCH_CHARACTERS',\n  GET_CHARACTER_DETAILS   = 'GET_CHARACTER_DETAILS',\n  GET_CHARACTERS_SUCCESS  = 'GET_CHARACTERS_SUCCESS',\n  GET_CHARACTERS_DETAILS_SUCCESS = 'GET_CHARACTERS_DETAILS_SUCCESS',\n  GET_CHARACTERS_FAILURE  = 'GET_CHARACTERS_FAILURE'\n}\n\nexport default CharacterActionTypes;\n","// Import Reducer type\nimport { Reducer } from 'redux';\n\n// Busines domain imports\nimport CharacterActions from '../actions/CharacterActions.type';\nimport CharacterActionTypes from '../actions/CharacterActionTypes.enum';\nimport ICharacterState from '../sources/ICharacterState.interface';\n\n// Business logic\nconst initialCharacterState: ICharacterState = {\n  character: undefined,\n  characters: [],\n  isFetching: false,\n};\n\nconst CharacterReducer: Reducer<ICharacterState, CharacterActions> = (\n  state = initialCharacterState,\n  action\n) => {\n  switch (action.type) {\n    case CharacterActionTypes.SEARCH_CHARACTERS: {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    }\n    case CharacterActionTypes.GET_CHARACTERS_SUCCESS: {\n      return {\n        ...state,\n        characters: action.characters,\n        isFetching: action.isFetching,\n      };\n    }\n    case CharacterActionTypes.GET_CHARACTER_DETAILS: {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    }\n    case CharacterActionTypes.GET_CHARACTERS_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        character: action.character,\n        isFetching: action.isFetching,\n      };\n    }\n    case CharacterActionTypes.GET_CHARACTERS_FAILURE: {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default CharacterReducer;\n","import axios from 'axios';\n\nconst baseUrl = 'https://superheroapi.com/api.php/10223717305259940';\n\nexport const searchCharactersFromApi = (term: String): Promise<any> => {\n  return axios.get(`${baseUrl}/search/${term}`);\n}\n\nexport const getCharacterDetailsFromApi = (id: String): Promise<any> => {\n  return axios.get(`${baseUrl}/${id}`);\n}\n\n","// Business domain imports\nimport CharacterActionTypes from './CharacterActionTypes.enum';\nimport {\n  ISearchCharactersAction,\n  IGetCharactersSuccessAction,\n  IGetCharactersFailureAction,\n  IGetCharacterDetailsAction,\n  IGetCharacterDetailsSuccessAction,\n} from './IGetCharactersActions.interface';\nimport ICharacter from '../sources/ICharacter.interface';\n\nexport const searchCharactersActionCreator = (term: string): ISearchCharactersAction => {\n  return {\n    type: CharacterActionTypes.SEARCH_CHARACTERS,\n    term,\n    isFetching: true,\n  };\n}\n\nexport const getCharactersSuccessActionCreator = (characters: ICharacter[]): IGetCharactersSuccessAction => {\n  return {\n    type: CharacterActionTypes.GET_CHARACTERS_SUCCESS,\n    characters,\n    isFetching: false,\n  };\n}\n\nexport const getCharactersFailureActionCreator = (): IGetCharactersFailureAction => {\n  return {\n    type: CharacterActionTypes.GET_CHARACTERS_FAILURE,\n    isFetching: false,\n  };\n}\n\nexport const getCharacterDetailsActionCreator = (id: string): IGetCharacterDetailsAction => {\n  return {\n    type: CharacterActionTypes.GET_CHARACTER_DETAILS,\n    id,\n    isFetching: true,\n  };\n}\n\nexport const getCharacterDetailsSuccessActionCreator = (character: ICharacter): IGetCharacterDetailsSuccessAction => {\n  return {\n    type: CharacterActionTypes.GET_CHARACTERS_DETAILS_SUCCESS,\n    character,\n    isFetching: false,\n  };\n}\n\n\n","import { call, put, takeEvery, all } from 'redux-saga/effects';\nimport CharacterActionTypes from '../actions/CharacterActionTypes.enum';\n\nimport {\n  searchCharactersFromApi,\n  getCharacterDetailsFromApi,\n} from '../sources/Api';\n\nimport {\n  getCharactersSuccessActionCreator,\n  getCharactersFailureActionCreator,\n  getCharacterDetailsSuccessActionCreator\n} from '../actions/CharacterActionCreators';\n\nimport {\n  ISearchCharactersAction, IGetCharacterDetailsAction\n} from '../actions/IGetCharactersActions.interface';\n\nexport function* searchCharactersSaga(action: ISearchCharactersAction) : any {\n  try {\n    const response = yield call(searchCharactersFromApi, action.term);\n    const characters = response.data.results;\n    yield put(getCharactersSuccessActionCreator(characters))\n  } catch(e) {\n    yield put(getCharactersFailureActionCreator());\n  }\n};\n\n\nexport function* getCharacterDetailSaga(action: IGetCharacterDetailsAction) : any {\n  try {\n    const response = yield call(getCharacterDetailsFromApi, action.id);\n    const character = response.data;\n    yield put(getCharacterDetailsSuccessActionCreator(character))\n  } catch(e) {\n    yield put(getCharactersFailureActionCreator());\n  }\n};\n\n\nexport function* charactersSaga() {\n  yield all([\n    takeEvery(CharacterActionTypes.SEARCH_CHARACTERS, searchCharactersSaga),\n    takeEvery(CharacterActionTypes.GET_CHARACTER_DETAILS, getCharacterDetailSaga)\n  ]);\n}\n","// Third-Party dependencies\nimport {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  Store\n} from 'redux';\n\n// React Sagas\nimport createSagaMiddleware from 'redux-saga';\n\n// Chrome Dev Tools\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Business domain imports\nimport IAppState from './IAppState.interface';\nimport CharacterReducer from '../reducers/CharacterReducer';\nimport { charactersSaga } from '../sagas/Character';\n\n// Saga Middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// Create the root reducer\nconst rootReducer = combineReducers<IAppState>({\n  characterState: CharacterReducer,\n});\n\n// Create a configure store function of type `IAppState`\nexport default function configureStore(): Store<IAppState, any> {\n  const store = createStore(\n                  rootReducer,\n                  undefined,\n                  composeWithDevTools(applyMiddleware(sagaMiddleware))\n                );\n\n  sagaMiddleware.run(charactersSaga);\n\n  return store;\n}\n","import React, {FunctionComponent} from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport './styles.css';\nimport ICharacter from '../../sources/ICharacter.interface';\n\ninterface IProps{\n  key?: string,\n  character: ICharacter,\n}\n\nexport const CharacterListItem: FunctionComponent<IProps> = ({ character }: IProps) => {\n  let history = useHistory();\n\n  const onClickHandler = (id: string) => (event: React.MouseEvent)  => {\n    event.preventDefault();\n    history.push(`/character/${id}`);\n  }\n\n  return (\n    <div className=\"hero-card\" onClick={onClickHandler(character.id)}>\n      <img src={character.image.url} alt={character.name}/>\n      <span>{character.name}</span>\n    </div>\n  );\n};\n\nexport default CharacterListItem;\n","import React, { FunctionComponent } from 'react';\n\n// Business domain imports\nimport ICharacter from '../../sources/ICharacter.interface';\nimport CharacterListItem from '../CharacterListItem';\n\nimport './styles.css'\n\ninterface IProps {\n  characters: ICharacter[];\n}\n\nconst CharacterList: FunctionComponent<IProps> = ({ characters }) => {\n  return (characters && characters.length > 0) ? (\n    <div className=\"hero-list\">\n      {\n        characters && characters.map(character => (\n          <CharacterListItem\n            key={character.id}\n            character={character} />\n        ))\n      }\n    </div>\n  ) : <h2 className=\"hero-list__empty-msg\">\n    Cerebro could not find your hero. Maybe he is using Magneto's helmet.\n    </h2>\n}\n\nexport default CharacterList;\n","import React, {FunctionComponent} from 'react';\nimport icon from '../../assets/marvel.svg'\n\nimport './styles.css'\n\ninterface IProps { }\n\nexport const Loader: FunctionComponent<IProps> = () => (\n  <div className='loader'>\n    <img className=\"loader__image\" src={icon} alt=\"loader\"/>\n    <span className=\"loader__message\">Cerebro is trying to find your hero...</span>\n  </div>\n);\n\nexport default Loader;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport './styles.css'\n\nexport const NavigationBar = () => {\n  return <>\n    <nav className=\"nav-bar\">\n      <Link to=\"/\">HEROES DATABASE</Link>\n    </nav>\n  </>\n}\n\nexport default NavigationBar;\n","import React, {FunctionComponent} from 'react';\nimport './styles.css';\n\ninterface IProps {\n  value: string,\n  onChange: Function,\n  onSubmit: Function,\n}\n\nexport const Search: FunctionComponent<IProps> = ({value, onChange, onSubmit}) => {\n  return <div className='search'>\n    <form onSubmit={e => onSubmit(e)}>\n      <input className=\"search-field\" placeholder='Search a hero' value={value} onChange={e => onChange(e)}></input>\n      <button onClick={e => onSubmit(e)}>SEARCH</button>\n    </form>\n  </div>;\n}\n\nexport default Search;","import React, { FunctionComponent, FormEvent, ChangeEvent, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport IAppState from '../../store/IAppState.interface';\nimport ICharacter from '../../sources/ICharacter.interface';\n\nimport {\n  searchCharactersActionCreator\n} from '../../actions/CharacterActionCreators';\n\nimport CharacterList from '../../components/CharacterList';\nimport Loader from '../../components/Loader';\nimport NavigationBar from '../../components/NavigationBar';\nimport Search from '../../components/Search';\n\nimport './styles.css';\n\ninterface IProps {\n  searchCharacters: Function,\n  characters: ICharacter[],\n  isFetching: Boolean,\n}\n\nexport const CharactersSearch: FunctionComponent<IProps> = ({\n  searchCharacters,\n  characters,\n  isFetching\n}) => {\n  const [search, setSearch] = useState('');\n  React.useEffect(() => {\n    const DEFAULT_SEARCH = \"man\";\n    searchCharacters(DEFAULT_SEARCH);\n  }, [searchCharacters]);\n\n\n  const submitSearch = (e: FormEvent) => {\n    e.preventDefault()\n    searchCharacters(search);\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setSearch(e.target.value);\n  }\n\n\n  return (\n    <div className=\"characters-container\">\n      <NavigationBar />\n      <Search value={search} onSubmit={submitSearch} onChange={onChange}/>\n      {isFetching\n        ? <>\n          <Loader></Loader>\n        </>\n        : (\n          <>\n            <div className=\"list\">\n              <CharacterList\n                characters={characters} />\n            </div>\n          </>\n        )\n      }\n    </div>\n  );\n}\n\n// Make data available on props\nconst mapStateToProps = (store: IAppState) => {\n  return {\n    characters: store.characterState.characters,\n    isFetching: store.characterState.isFetching,\n  };\n};\n\n// Make functions available on props\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    searchCharacters: (term: string) => dispatch(searchCharactersActionCreator(term)),\n  }\n}\n\n// Connect the app aware container to the store and reducers\nexport default connect(mapStateToProps, mapDispatchToProps)(CharactersSearch);\n","import React, {FunctionComponent} from 'react'\nimport { GiThink, GiBiceps, GiHoodedFigure, GiRevolt, GiSwordman, GiPowerLightning } from \"react-icons/gi\";\n\nimport './styles.css'\nimport { IconType } from 'react-icons/lib';\n\ninterface PowerStatsProps {\n  type: string,\n  value: string\n}\n\nconst PowerStatsItem: FunctionComponent<PowerStatsProps> = ({type, value}) => {\n\n  const getIconByType = (type: string) => {\n    let Icon = GiThink;\n    let className = `power-card__icon power-card--${type}`;\n    let icons: Record<string, IconType> = {\n      \"intelligence\": GiThink,\n      \"strength\":GiBiceps,\n      \"speed\":GiHoodedFigure,\n      \"durability\":GiRevolt,\n      \"combat\": GiSwordman,\n      \"power\":GiPowerLightning,\n    }\n\n    Icon = icons[type];\n    return <Icon className={className}/>\n  }\n\n  return <div className={`power-card power-card--${type}`}>\n    {getIconByType(type)}\n    <span>{type}</span>\n    <span>{value}/100</span>\n  </div>\n}\n\nexport default PowerStatsItem;","import React, {FunctionComponent} from 'react';\nimport ICharacter from '../../sources/ICharacter.interface';\nimport PowerStatsItem from '../PowerStatsItem';\n\ninterface IProps {\n  character: ICharacter\n}\n\nexport const PowerStatsList: FunctionComponent<IProps> = ({character}) => {\n  const renderPowerStats = (key: string) => {\n    const type = key;\n    const value = character.powerstats[key]\n    return <PowerStatsItem key={type} type={type} value={value} />\n  }\n\n  return <>{Object.keys(character.powerstats).map(renderPowerStats)}</>\n}\n\nexport default PowerStatsList;","import React, {FunctionComponent} from 'react';\n\nimport './styles.css';\n\ninterface IProps {\n  title: string,\n  subtitle: any,\n}\n\nconst TitleAndSubtitle: FunctionComponent<IProps> = ({title, subtitle}) => {\n  const isSubObject = typeof subtitle == \"object\";\n\n  return <div className=\"labels-container\" >\n    <span className=\"title\">{title}</span>\n    <span className=\"subtitle\">{isSubObject ? subtitle.join(\", \") : subtitle}</span>\n  </div>\n}\n\nexport default TitleAndSubtitle;","import React, { FunctionComponent } from 'react';\nimport TitleAndSubtitle from '../TitleAndSubtitle';\n\ninterface IProps {\n  objProps: Record<string, any>;\n}\n\nexport const InfoList: FunctionComponent<IProps> = ({ objProps }) => {\n  return <>\n    {\n      Object.keys(objProps).map(key => {\n        const title = key;\n        const value = objProps[key]\n        return <TitleAndSubtitle key={title} title={title} subtitle={value} />\n      })\n    }\n  </>\n}\n\nexport default InfoList;","import React, {FunctionComponent} from 'react';\nimport { connect } from 'react-redux';\nimport { useParams} from 'react-router';\n\nimport IAppState from '../../store/IAppState.interface';\n\nimport {\n  getCharacterDetailsActionCreator\n} from '../../actions/CharacterActionCreators';\n\nimport Loader from '../../components/Loader';\nimport NavigationBar from '../../components/NavigationBar';\nimport PowerStatsList from '../../components/PowerStatsList';\nimport InfoList from '../../components/InfoList';\n\nimport './styles.css';\n\ninterface IProps {\n  getCharacterDetails: Function,\n  character: any,\n  isFetching: Boolean,\n}\n\nexport const CharacterDetails: FunctionComponent<IProps> = ({\n  getCharacterDetails,\n  character,\n  isFetching,\n}) => {\n  const {charId} = useParams(); \n\n  React.useEffect(() => {\n    getCharacterDetails(charId);\n  }, [charId, getCharacterDetails]);\n\n  return (\n    <div className=\"characters-container\">\n      <NavigationBar/>\n      {isFetching || !(character)\n        ? <Loader></Loader>\n        : (\n          <div className=\"details\">\n            <>\n              <div className=\"details__header\">\n                <img src={character.image.url} alt={character.name}></img>\n                <div className=\"details__header__name-stats-container\">\n                  <h1>{character.name}</h1>\n                  <div className=\"powerstats\">\n                    <PowerStatsList character={character}/>\n                  </div>\n                </div>\n              </div>\n            </>\n            <div className=\"details__char-info\">\n              <div className=\"details__char-info__biography\">\n                <h2>Biography</h2>\n                <InfoList objProps={character.biography}/>\n                <InfoList objProps={character.work}/>\n                <InfoList objProps={character.connections}/>\n              </div>\n              <div className=\"details__char-info__appearance\">\n                <h2>Appearance</h2>\n                <InfoList objProps={character.appearance}/>\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\n// Make data available on props\nconst mapStateToProps = (store: IAppState) => {\n  return {\n    character: store.characterState.character,\n    isFetching: store.characterState.isFetching,\n  };\n};\n\n// Make functions available on props\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    getCharacterDetails: (id: string) => dispatch(getCharacterDetailsActionCreator(id)),\n  }\n}\n\n// Connect the app aware container to the store and reducers\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterDetails);\n","import * as React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\n// Business domain imports\nimport CharacterContainer from '../pages/CharactersSearch';\nimport CharacterDetails from '../pages/CharacterDetails';\n\nexport const App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={CharacterContainer} />\n        <Route path=\"/character/:charId\" component={CharacterDetails} />\n      </Switch>\n    </Router>\n  )\n};\n\nexport default App;\n","import React, {FunctionComponent} from 'react';\nimport { Provider } from 'react-redux';\nimport { Store } from 'redux';\n\n// Business domain imports\nimport App from '../../app/App';\nimport IAppState from '../../store/IAppState.interface';\n\n// Create interface for Props\ninterface IProps {\n  store: Store<IAppState>;\n}\n\n// Create a root component that receives the store via props and\n// wraps the App component with Provider, giving props to containers\nconst Root: FunctionComponent<IProps> = ({ store }) => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nexport default Root;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\n// Business domain\nimport configureStore from \"./store/Store\";\nimport Root from './pages/root/Root';\n\nimport './shared/GlobalStyle.css'\n\n// Generate the store\nconst store = configureStore();\n\n// Render the App\nReactDOM.render(\n  <Root store={store} />,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}