{"version":3,"sources":["actions/CharacterActionTypes.enum.ts","reducers/CharacterReducer.ts","sources/Api.ts","actions/CharacterActionCreators.ts","sagas/Character.ts","store/Store.tsx","components/CharaacterListItem/CharacterListItem.tsx","components/CharacterList/CharacterList.tsx","components/Loader/Loader.tsx","components/NavigationBar/NavigationBar.tsx","components/CharacterContainer/CharacterContainer.tsx","components/PowerStatsItem/PowerStatsItem.tsx","components/CharacterDetails/CharacterDetails.tsx","app/App.tsx","pages/root/Root.tsx","index.tsx"],"names":["CharacterActionTypes","initialCharacterState","character","undefined","characters","isFetching","CharacterReducer","state","arguments","length","action","type","SEARCH_CHARACTERS","Object","objectSpread2","GET_CHARACTERS_SUCCESS","GET_CHARACTER_DETAILS","GET_CHARACTERS_DETAILS_SUCCESS","GET_CHARACTERS_FAILURE","baseUrl","searchCharactersFromApi","term","axios","get","concat","getCharacterDetailsFromApi","id","getCharactersSuccessActionCreator","getCharactersFailureActionCreator","getCharacterDetailsSuccessActionCreator","searchCharactersSaga","getCharacterDetailSaga","charactersSaga","response","regenerator_default","a","wrap","_context","prev","next","call","sent","data","results","put","t0","stop","_marked","_context2","_marked2","_context3","all","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","characterState","withRouter","_ref","history","react","className","onClick","event","preventDefault","push","src","image","url","alt","name","CharacterList","map","components_CharaacterListItem_CharacterListItem","key","Loader","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","NavigationBar","children","react_default","createElement","Fragment","connect","store","dispatch","searchCharacters","searchCharactersActionCreator","_useState","useState","_useState2","slicedToArray","search","setSearch","useEffect","components_NavigationBar_NavigationBar","onSubmit","e","placeholder","value","onChange","target","components_Loader_Loader","components_CharacterList_CharacterList","PowerStatsItem","props","index_esm","getIconByType","getCharacterDetails","getCharacterDetailsActionCreator","match","React","charId","params","renderStats","stats","capitalize","word","toUpperCase","slice","keys","JSON","stringify","powerstats","components_PowerStatsItem_PowerStatsItem","biography","work","connections","appearance","App","react_router_dom","react_router","exact","path","component","CharacterContainer","CharacterDetails","Root","es","app_App","createStore","composeWithDevTools","applyMiddleware","run","configureStore","ReactDOM","root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.b9cbfd51.chunk.js","sourcesContent":["enum CharacterActionTypes {\n  SEARCH_CHARACTERS       = 'SEARCH_CHARACTERS',\n  GET_CHARACTER_DETAILS   = 'GET_CHARACTER_DETAILS',\n  GET_CHARACTERS_SUCCESS  = 'GET_CHARACTERS_SUCCESS',\n  GET_CHARACTERS_DETAILS_SUCCESS = 'GET_CHARACTERS_DETAILS_SUCCESS',\n  GET_CHARACTERS_FAILURE  = 'GET_CHARACTERS_FAILURE'\n}\n\nexport default CharacterActionTypes;\n","// Import Reducer type\nimport { Reducer } from 'redux';\n\n// Busines domain imports\nimport CharacterActions from '../actions/CharacterActions.type';\nimport CharacterActionTypes from '../actions/CharacterActionTypes.enum';\nimport ICharacterState from '../sources/ICharacterState.interface';\n\n// Business logic\nconst initialCharacterState: ICharacterState = {\n  character: undefined,\n  characters: [],\n  isFetching: false,\n};\n\nconst CharacterReducer: Reducer<ICharacterState, CharacterActions> = (\n  state = initialCharacterState,\n  action\n) => {\n  switch (action.type) {\n    case CharacterActionTypes.SEARCH_CHARACTERS: {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    }\n    case CharacterActionTypes.GET_CHARACTERS_SUCCESS: {\n      return {\n        ...state,\n        characters: action.characters,\n        isFetching: action.isFetching,\n      };\n    }\n    case CharacterActionTypes.GET_CHARACTER_DETAILS: {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    }\n    case CharacterActionTypes.GET_CHARACTERS_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        character: action.character,\n        isFetching: action.isFetching,\n      };\n    }\n    case CharacterActionTypes.GET_CHARACTERS_FAILURE: {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default CharacterReducer;\n","import axios from 'axios';\n\nconst baseUrl = 'https://superheroapi.com/api.php/10223717305259940';\n\nexport const searchCharactersFromApi = (term: String): Promise<any> => {\n  return axios.get(`${baseUrl}/search/${term}`);\n}\n\nexport const getCharacterDetailsFromApi = (id: String): Promise<any> => {\n  return axios.get(`${baseUrl}/${id}`);\n}\n\n","// Business domain imports\nimport CharacterActionTypes from './CharacterActionTypes.enum';\nimport {\n  ISearchCharactersAction,\n  IGetCharactersSuccessAction,\n  IGetCharactersFailureAction,\n  IGetCharacterDetailsAction,\n  IGetCharacterDetailsSuccessAction,\n} from './IGetCharactersActions.interface';\nimport ICharacter from '../sources/ICharacter.interface';\n\nexport const searchCharactersActionCreator = (term: string): ISearchCharactersAction => {\n  return {\n    type: CharacterActionTypes.SEARCH_CHARACTERS,\n    term,\n    isFetching: true,\n  };\n}\n\nexport const getCharactersSuccessActionCreator = (characters: ICharacter[]): IGetCharactersSuccessAction => {\n  return {\n    type: CharacterActionTypes.GET_CHARACTERS_SUCCESS,\n    characters,\n    isFetching: false,\n  };\n}\n\nexport const getCharactersFailureActionCreator = (): IGetCharactersFailureAction => {\n  return {\n    type: CharacterActionTypes.GET_CHARACTERS_FAILURE,\n    isFetching: false,\n  };\n}\n\nexport const getCharacterDetailsActionCreator = (id: string): IGetCharacterDetailsAction => {\n  return {\n    type: CharacterActionTypes.GET_CHARACTER_DETAILS,\n    id,\n    isFetching: true,\n  };\n}\n\nexport const getCharacterDetailsSuccessActionCreator = (character: ICharacter): IGetCharacterDetailsSuccessAction => {\n  return {\n    type: CharacterActionTypes.GET_CHARACTERS_DETAILS_SUCCESS,\n    character,\n    isFetching: false,\n  };\n}\n\n\n","import { call, put, takeEvery, all } from 'redux-saga/effects';\nimport CharacterActionTypes from '../actions/CharacterActionTypes.enum';\n\nimport {\n  searchCharactersFromApi,\n  getCharacterDetailsFromApi,\n} from '../sources/Api';\n\nimport {\n  getCharactersSuccessActionCreator,\n  getCharactersFailureActionCreator,\n  getCharacterDetailsSuccessActionCreator\n} from '../actions/CharacterActionCreators';\n\nimport {\n  ISearchCharactersAction, IGetCharacterDetailsAction\n} from '../actions/IGetCharactersActions.interface';\n\nexport function* searchCharactersSaga(action: ISearchCharactersAction) : any {\n  try {\n    const response = yield call(searchCharactersFromApi, action.term);\n    const characters = response.data.results;\n    yield put(getCharactersSuccessActionCreator(characters))\n  } catch(e) {\n    yield put(getCharactersFailureActionCreator());\n  }\n};\n\n\nexport function* getCharacterDetailSaga(action: IGetCharacterDetailsAction) : any {\n  try {\n    const response = yield call(getCharacterDetailsFromApi, action.id);\n    const character = response.data;\n    yield put(getCharacterDetailsSuccessActionCreator(character))\n  } catch(e) {\n    yield put(getCharactersFailureActionCreator());\n  }\n};\n\n\nexport function* charactersSaga() {\n  yield all([\n    takeEvery(CharacterActionTypes.SEARCH_CHARACTERS, searchCharactersSaga),\n    takeEvery(CharacterActionTypes.GET_CHARACTER_DETAILS, getCharacterDetailSaga)\n  ]);\n}\n","// Third-Party dependencies\nimport {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  Store\n} from 'redux';\n\n// React Sagas\nimport createSagaMiddleware from 'redux-saga';\n\n// Chrome Dev Tools\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Business domain imports\nimport IAppState from './IAppState.interface';\nimport CharacterReducer from '../reducers/CharacterReducer';\nimport { charactersSaga } from '../sagas/Character';\n\n// Saga Middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// Create the root reducer\nconst rootReducer = combineReducers<IAppState>({\n  characterState: CharacterReducer,\n});\n\n// Create a configure store function of type `IAppState`\nexport default function configureStore(): Store<IAppState, any> {\n  const store = createStore(\n                  rootReducer,\n                  undefined,\n                  composeWithDevTools(applyMiddleware(sagaMiddleware))\n                );\n\n  sagaMiddleware.run(charactersSaga);\n\n  return store;\n}\n","import * as React from 'react';\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\n\nimport './CharacterListItem.css';\nimport ICharacter from '../../sources/ICharacter.interface';\n\ninterface IProps extends RouteComponentProps<any>{\n  character: ICharacter,\n}\n\nconst CharacterListItem: React.FunctionComponent<IProps> = ({ character, history }: IProps) => {\n  const onClickHandler = (id: string) => (event: React.MouseEvent)  => {\n    event.preventDefault();\n    history.push(`/characted/${id}`);\n  }\n\n  return (\n    <div className=\"hero-card\" onClick={onClickHandler(character.id)}>\n      <img src={character.image.url} alt={character.name}/>\n      <span>{character.name}</span>\n    </div>\n  );\n};\n\nexport default withRouter(CharacterListItem);\n","import * as React from 'react';\n\n// Business domain imports\nimport ICharacter from '../../sources/ICharacter.interface';\nimport CharacterListItem from '../CharaacterListItem/CharacterListItem';\n\nimport './CharacterList.css'\n\ninterface IProps {\n  characters: ICharacter[];\n}\n\nconst CharacterList: React.FunctionComponent<IProps> = ({ characters }) => (\n  <div className=\"hero-list\">\n    {characters && characters.map(character => (\n      <CharacterListItem\n        key={character.id}\n        character={character} />\n    ))}\n  </div>\n);\n\nexport default CharacterList;\n","import * as React from 'react';\n\ninterface IProps {}\n\nconst Loader: React.FunctionComponent<IProps> = () => (\n  <div className='progress'>\n    <div\n      className='progress-bar progress-bar-striped progress-bar-animated'\n      role='progressbar'\n      aria-valuenow={75}\n      aria-valuemin={0}\n      aria-valuemax={100}\n      style={{ width: '100%' }}\n    >Jarvis is trying to find your hero...</div>\n  </div>\n);\n\nexport default Loader;\n","import React, { ReactNode } from 'react';\n\nimport './NavigationBar.css'\n\ninterface IProps {\n  children: ReactNode,\n}\n\nconst NavigationBar: React.FunctionComponent<IProps> = ({ children }) => (\n  <>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <span>My Hero Academia</span>\n    </nav>\n  </>\n);\n\nexport default NavigationBar;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport IAppState from '../../store/IAppState.interface';\nimport ICharacter from '../../sources/ICharacter.interface';\n\nimport {\n  searchCharactersActionCreator\n} from '../../actions/CharacterActionCreators';\n\nimport CharacterList from '../CharacterList/CharacterList';\nimport Loader from '../Loader/Loader';\nimport NavigationBar from '../NavigationBar/NavigationBar';\n\nimport './CharacterContainer.css';\n\ninterface IProps {\n  searchCharacters: Function,\n  characters: ICharacter[],\n  isFetching: Boolean,\n}\n\nexport const CharacterContainer: React.FunctionComponent<IProps> = ({\n  searchCharacters,\n  characters,\n  isFetching\n}) => {\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    searchCharacters(\"super\");\n  }, [searchCharacters]);\n\n\n  const submitSearch = (e: React.FormEvent) => {\n    e.preventDefault()\n    searchCharacters(search);\n  }\n\n  return (\n    <div className=\"characters-container\">\n      <NavigationBar>\n        {/* Some logo maybe */}\n      </NavigationBar>\n      <div className='search'>\n        <form onSubmit={submitSearch}>\n          <input className=\"search-field\" placeholder='Search a hero' value={search} onChange={e => setSearch(e.target.value)}></input>\n        </form>\n      </div>\n      {isFetching\n        ? <>\n          <Loader></Loader>\n        </>\n        : (\n          <>\n            <div className=\"list\">\n              <CharacterList\n                characters={characters} />\n            </div>\n          </>\n        )\n      }\n    </div>\n  );\n}\n\n// Make data available on props\nconst mapStateToProps = (store: IAppState) => {\n  return {\n    characters: store.characterState.characters,\n    isFetching: store.characterState.isFetching,\n  };\n};\n\n// Make functions available on props\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    searchCharacters: (term: string) => dispatch(searchCharactersActionCreator(term)),\n  }\n}\n\n// Connect the app aware container to the store and reducers\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterContainer);\n","import React from 'react'\nimport { GiThink, GiBiceps, GiHoodedFigure, GiRevolt, GiSwordman } from \"react-icons/gi\";\n\nimport './PowerStatsItem.css'\n\ninterface PowerStatsProps {\n  type: string,\n  value: string\n}\n\nconst PowerStatsItem = (props: PowerStatsProps) => {\n\n  const getIconByType = (type: string) => {\n    switch(type) {\n      case \"intelligence\":\n        return <GiThink className=\"power-card__icon\"/>;\n      case \"strength\":\n        return <GiBiceps className=\"power-card__icon\"/>;\n      case \"speed\":\n        return <GiHoodedFigure className=\"power-card__icon\"/>;\n      case \"durability\":\n        return <GiRevolt className=\"power-card__icon\"/>\n      case \"combat\":\n        return <GiSwordman className=\"power-card__icon\"/>;\n      default:\n        return <GiHoodedFigure className=\"power-card__icon\"/>;\n    }\n  }\n\n  const {type, value} = props;\n\n  return <div className=\"power-card\">\n    {getIconByType(type)}\n    <span>{type}</span>\n    <span>{value}/100</span>\n  </div>\n}\n\nexport default PowerStatsItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\n\nimport IAppState from '../../store/IAppState.interface';\n\nimport './CharacterDetails.css';\n\nimport {\n  getCharacterDetailsActionCreator\n} from '../../actions/CharacterActionCreators';\n\nimport Loader from '../Loader/Loader';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport PowerStatsItem from '../PowerStatsItem/PowerStatsItem';\nimport ICharacter from '../../sources/ICharacter.interface';\n\ninterface MatchParams {\n  id: string\n}\n\ninterface MatchProps extends RouteComponentProps<MatchParams> {\n  params: MatchParams\n}\n\ninterface IProps {\n  getCharacterDetails: Function,\n  character: any,\n  isFetching: Boolean,\n  match: MatchProps\n}\n\nexport const CharacterDetails: React.FunctionComponent<IProps> = ({\n  getCharacterDetails,\n  character,\n  isFetching,\n  match\n}) => {\n  React.useEffect(() => {\n    const charId = match.params.id\n    getCharacterDetails(charId);\n  }, [getCharacterDetails]);\n\n  const renderPowerStats = (key: string) => {\n    return <PowerStatsItem key={key} type={key} value={character.powerstats[key]} />\n  }\n\n  const renderStats = (stats: Record<string, any>) => {\n    const capitalize = (word: string) => {\n      return word[0].toUpperCase() + word.slice(1);\n    }\n\n    return <>\n      {\n        Object.keys(stats).map(key => {\n          if (typeof stats[key] === \"string\") {\n            return <><span className=\"label\" key={key}>{capitalize(key)}:</span> <span>{stats[key]}</span><br/></>\n          }\n          return <><span className=\"label\" key={key}>{capitalize(key)}:</span> <span>{JSON.stringify(stats[key])}</span><br/></>\n        })\n      }\n    </>\n  }\n\n  return (\n    <div className=\"characters-container\">\n      <NavigationBar>\n        {/* Some logo maybe */}\n      </NavigationBar>\n\n      {isFetching || !(character)\n        ? <Loader></Loader>\n        : (\n          <div className=\"details\">\n            <div>\n              <div className=\"details__header\">\n                <img src={character.image.url}></img>\n                <h1>{character.name}</h1>\n              </div>\n              <div className=\"details__powerstats\">{\n                Object.keys(character.powerstats).map(renderPowerStats)\n              }\n              </div>\n            </div>\n            <div className=\"details__char-info\">\n              <div className=\"details__char-info__biography\">\n                <h2>Biography</h2>\n                {renderStats(character.biography)}\n                {renderStats(character.work)}\n                {renderStats(character.connections)}\n              </div>\n              <div className=\"details__char-info__appearance\">\n                {renderStats(character.appearance)}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\n// Make data available on props\nconst mapStateToProps = (store: IAppState) => {\n  return {\n    character: store.characterState.character,\n    isFetching: store.characterState.isFetching,\n  };\n};\n\n// Make functions available on props\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    getCharacterDetails: (id: string) => dispatch(getCharacterDetailsActionCreator(id)),\n  }\n}\n\n// Connect the app aware container to the store and reducers\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterDetails);\n","import * as React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\n// Business domain imports\nimport CharacterContainer from '../components/CharacterContainer/CharacterContainer';\nimport CharacterDetails from '../components/CharacterDetails/CharacterDetails';\n\nconst App: React.SFC<{}> = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={CharacterContainer}/>\n        <Route path=\"/character/:id\" component={CharacterDetails}/>\n      </Switch>\n    </Router>\n  )\n};\n\nexport default App;\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { Store } from 'redux';\n\n// Business domain imports\nimport App from '../../app/App';\nimport IAppState from '../../store/IAppState.interface';\n\n// Create interface for Props\ninterface IProps {\n  store: Store<IAppState>;\n}\n\n// Create a root component that receives the store via props and\n// wraps the App component with Provider, giving props to containers\nconst Root: React.SFC<IProps> = ({ store }) => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nexport default Root;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\n// Business domain\nimport configureStore from \"./store/Store\";\nimport Root from './pages/root/Root';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n// Generate the store\nconst store = configureStore();\n\n// Render the App\nReactDOM.render(\n  <Root store={store} />,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}